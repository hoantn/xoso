-- üîß S·ª¨A L·ªñI THI·∫æU END_TIME KHI T·∫†O SESSION

-- B∆Ø·ªöC 1: Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng game_sessions
SELECT 
    'üìã C·∫§U TR√öC B·∫¢NG GAME_SESSIONS' as title,
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_name = 'game_sessions' 
ORDER BY ordinal_position;

-- B∆Ø·ªöC 2: Ki·ªÉm tra c√°c phi√™n hi·ªán t·∫°i
SELECT 
    'üéØ C√ÅC PHI√äN HI·ªÜN T·∫†I' as title,
    id,
    session_number,
    game_type,
    status,
    start_time,
    end_time,
    draw_time,
    created_at
FROM game_sessions 
WHERE created_at >= NOW() - INTERVAL '1 hour'
ORDER BY session_number DESC
LIMIT 5;

-- B∆Ø·ªöC 3: Ki·ªÉm tra user c√≥ balance
SELECT 
    'üí∞ USERS C√ì BALANCE' as title,
    id,
    username,
    balance
FROM users 
WHERE balance > 100000
ORDER BY balance DESC
LIMIT 3;

-- B∆Ø·ªöC 4: T·∫°o phi√™n test v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
DO $$
DECLARE
    test_session_id UUID;
    test_user_id UUID;
    test_bet_id UUID;
    next_session_number INTEGER;
    session_start_time TIMESTAMP WITH TIME ZONE;
    session_end_time TIMESTAMP WITH TIME ZONE;
    session_draw_time TIMESTAMP WITH TIME ZONE;
BEGIN
    -- T√¨m user c√≥ balance
    SELECT id INTO test_user_id 
    FROM users 
    WHERE balance > 100000 
    ORDER BY balance DESC
    LIMIT 1;
    
    IF test_user_id IS NULL THEN
        RAISE NOTICE '‚ùå Kh√¥ng t√¨m th·∫•y user c√≥ balance ƒë·ªÉ test';
        RETURN;
    END IF;
    
    -- T√≠nh session number ti·∫øp theo
    SELECT COALESCE(MAX(session_number), 2000) + 1 
    INTO next_session_number
    FROM game_sessions 
    WHERE game_type = 'lode_nhanh_1p';
    
    -- T√≠nh th·ªùi gian
    session_start_time := NOW();
    session_end_time := session_start_time + INTERVAL '3 minutes';
    session_draw_time := session_end_time;
    
    -- T·∫°o phi√™n test v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
    INSERT INTO game_sessions (
        game_type,
        session_number,
        start_time,
        end_time,
        draw_time,
        status,
        results_data,
        created_at,
        updated_at
    ) VALUES (
        'lode_nhanh_1p',
        next_session_number,
        session_start_time,
        session_end_time,
        session_draw_time,
        'open',
        jsonb_build_object(
            'issue', next_session_number::text,
            'status', 'accepting_bets',
            'description', 'lode_nhanh_1p - Test Session',
            'session_type', 'lode_nhanh_1p',
            'duration_minutes', 3
        ),
        session_start_time,
        session_start_time
    ) RETURNING id INTO test_session_id;
    
    -- T·∫°o c∆∞·ª£c test
    INSERT INTO user_bets (
        user_id,
        session_id,
        bet_type,
        numbers,
        amount,
        potential_win,
        status,
        created_at,
        updated_at
    ) VALUES (
        test_user_id,
        test_session_id,
        'lo_2_so_1p',
        ARRAY['12', '34'],
        50000,
        50000 * 99, -- T·ª∑ l·ªá 1:99 cho l√¥ 2 s·ªë
        'pending',
        NOW(),
        NOW()
    ) RETURNING id INTO test_bet_id;
    
    RAISE NOTICE '‚úÖ ƒê√É T·∫†O PHI√äN TEST TH√ÄNH C√îNG:';
    RAISE NOTICE '   üìç Session ID: %', test_session_id;
    RAISE NOTICE '   üî¢ Session Number: %', next_session_number;
    RAISE NOTICE '   üë§ User ID: %', test_user_id;
    RAISE NOTICE '   üé≤ Bet ID: %', test_bet_id;
    RAISE NOTICE '   ‚è∞ Start Time: %', session_start_time;
    RAISE NOTICE '   ‚è∞ End Time: %', session_end_time;
    RAISE NOTICE '   üéØ Bet Numbers: [12, 34]';
    RAISE NOTICE '   üí∞ Bet Amount: 50,000 VND';
    RAISE NOTICE '   üèÜ Potential Win: 4,950,000 VND';
    RAISE NOTICE '';
    RAISE NOTICE 'üéÆ B√ÇY GI·ªú C√ì TH·ªÇ TEST QUAY S·ªê TH·ª¶ C√îNG!';
    
EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE '‚ùå L·ªñI KHI T·∫†O PHI√äN TEST: %', SQLERRM;
END $$;

-- B∆Ø·ªöC 5: Hi·ªÉn th·ªã phi√™n test v·ª´a t·∫°o
SELECT 
    'üß™ PHI√äN TEST V·ª™A T·∫†O' as title,
    gs.id as session_id,
    gs.session_number,
    gs.game_type,
    gs.status,
    gs.start_time,
    gs.end_time,
    gs.draw_time,
    COUNT(ub.id) as total_bets,
    ARRAY_AGG(ub.numbers) FILTER (WHERE ub.id IS NOT NULL) as bet_numbers,
    ARRAY_AGG(u.username) FILTER (WHERE u.username IS NOT NULL) as usernames,
    SUM(ub.amount) FILTER (WHERE ub.amount IS NOT NULL) as total_bet_amount
FROM game_sessions gs
LEFT JOIN user_bets ub ON gs.id = ub.session_id
LEFT JOIN users u ON ub.user_id = u.id
WHERE gs.created_at >= NOW() - INTERVAL '2 minutes'
  AND gs.game_type = 'lode_nhanh_1p'
GROUP BY gs.id, gs.session_number, gs.game_type, gs.status, gs.start_time, gs.end_time, gs.draw_time
ORDER BY gs.created_at DESC
LIMIT 1;

-- B∆Ø·ªöC 6: Ki·ªÉm tra t·∫•t c·∫£ phi√™n ƒëang m·ªü
SELECT 
    'üîì T·∫§T C·∫¢ PHI√äN ƒêANG M·ªû' as title,
    gs.session_number,
    gs.game_type,
    gs.status,
    gs.draw_time,
    COUNT(ub.id) as total_bets,
    CASE 
        WHEN gs.draw_time > NOW() THEN 'Ch∆∞a ƒë·∫øn gi·ªù quay (' || EXTRACT(EPOCH FROM (gs.draw_time - NOW()))::INTEGER || 's)'
        WHEN gs.draw_time <= NOW() THEN 'ƒê√£ ƒë·∫øn gi·ªù quay!'
    END as draw_status
FROM game_sessions gs
LEFT JOIN user_bets ub ON gs.id = ub.session_id
WHERE gs.status = 'open'
GROUP BY gs.id, gs.session_number, gs.game_type, gs.status, gs.draw_time
ORDER BY gs.session_number DESC
LIMIT 5;

-- B∆Ø·ªöC 7: H∆∞·ªõng d·∫´n test
SELECT 
    'üìñ H∆Ø·ªöNG D·∫™N TEST' as title,
    'B√¢y gi·ªù c√≥ th·ªÉ v√†o /admin95 v√† th·ª±c hi·ªán Quay S·ªë Th·ªß C√¥ng' as instruction,
    'Phi√™n test c√≥ c∆∞·ª£c th·∫≠t s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω ch√≠nh x√°c' as note;
